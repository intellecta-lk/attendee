services:
  attendee-worker-local:
    build: ./
    # networks:
    #   - attendee_network
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-attendee.settings.internal}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_RECORDING_STORAGE_BUCKET_NAME=${AWS_RECORDING_STORAGE_BUCKET_NAME}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - CREDENTIALS_ENCRYPTION_KEY=${CREDENTIALS_ENCRYPTION_KEY}
    command: celery -A attendee worker -l INFO
    healthcheck:
      test: ["CMD-SHELL", "celery inspect ping --destination celery@$$HOSTNAME"]
      # interval: 30s
      # timeout: 10s
      # retries: 3
      # start_period: 5s


  attendee-app-local:
    build: ./
    # networks:
    #   - attendee_network
    ports:
      - "8000"
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-attendee.settings.internal}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_RECORDING_STORAGE_BUCKET_NAME=${AWS_RECORDING_STORAGE_BUCKET_NAME}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - CREDENTIALS_ENCRYPTION_KEY=${CREDENTIALS_ENCRYPTION_KEY}
    # command: python manage.py runserver 0.0.0.0:8000
    command: gunicorn --bind 0.0.0.0:8000 attendee.wsgi
    healthcheck:
      test: ["CMD" , "curl" ,"-f", "http://localhost:8000/"]
      # test: wget --no-verbose --tries=1 --spider http://localhost:8000 || exit 1
      # interval: 10s
      # retries: 5
      # timeout: 10s

# networks:
#   attendee_network:
#     driver: bridge
